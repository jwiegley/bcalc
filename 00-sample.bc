1 + 1
# == 2

1 + 9 * 20 / 5
# == 37

(1 + 9) * 20 / 5
# == 40

# phi is a constant
let phi = 1 + sqrt(5)) / 2

# fib(n) calculates the nth Fibonacci number based on Binet's formula.
define fib(n) {
  let psi = 1 - phi
  return (phi ^ n - psi ^ n) / (phi - psi)
}

fib(1)
# == 1

fib(3)
# == 2

fib(10)
# == 55

# fib_recursive(n) calculates the nth Fibonacci number recursively
define fib_recursive(n) {
  if (n == 1) {
    return 1
  } else if (n == 2) {
    return 1
  } else {
    return fib_recursive(n - 1) + fib_recursive(n)
  }
}

fib(10) == fib_recursive(10)
# T
